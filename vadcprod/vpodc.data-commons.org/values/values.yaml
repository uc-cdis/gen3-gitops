ambassador:
  jupyterNamespace: "jupyter-pods"
arborist:
  replicaCount: 4
  autoscaling:
    enabled: false
    maxReplicas: 1
    minReplicas: 1
    targetCPUUtilizationPercentage: 40
  enabled: true
  image:
    repository: 707767160287.dkr.ecr.us-east-1.amazonaws.com/gen3/arborist
    tag: "2025.10"
audit:
  externalSecrets:
    auditG3auto: vadcprod-audit-g3auto
  serviceAccount:
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::663707118480:role/vadcprod--vadcprod-helm--audit-sqs-receiver
aws-es-proxy:
  enabled: true
  esEndpoint: vpc-vadcprod-gen3-metadata-2-vqrbyt4omluv7b2uqw5idjdwua.us-east-1.es.amazonaws.com
  image:
    repository: 707767160287.dkr.ecr.us-east-1.amazonaws.com/gen3/aws-es-proxy
    tag: v1.3.1
argo-wrapper:
  enabled: true
  image:
    repository: 707767160287.dkr.ecr.us-east-1.amazonaws.com/gen3/argo-wrapper
    tag: VA-2025.10.27
  # scalingGroups:
  #   default: "{{workflow.name}}"
  #   custom:
  #     aprokh@uchicago.edu: "{{workflow.name}}" # example of how to configure something different for a specific user
  s3Bucket: vadcprod-argo-user-artifacts-downloadable
  internalS3Bucket: vadcprod-argo-bucket
  environment: vadcprod-helm
cohort-middleware:
  enabled: true
  externalSecrets:
    cohortMiddlewareG3Auto: vadcprod-cohort-middleware-g3auto
  image:
    repository: 707767160287.dkr.ecr.us-east-1.amazonaws.com/gen3/cohort-middleware
    tag: VA-2025.10.24
dashboard:
  replicaCount: 4
  autoscaling:
    enabled: false
    maxReplicas: 1
    minReplicas: 1
    targetCPUUtilizationPercentage: 40
  dashboardConfig:
    bucket: dashboard-663707118480-vadcprod-gen3
    prefix: vpodc.data-commons.org
  enabled: true
  image:
    repository: 707767160287.dkr.ecr.us-east-1.amazonaws.com/gen3/gen3-statics
    tag: "2025.10"
  serviceAccount:
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::663707118480:role/vadcprod--vadcprod-helm--dashboard-access
etl:
  esEndpoint: elasticsearch
  mappings:
    - category: data_file
      doc_type: file
      injecting_props:
        case:
          props:
            - name: submitter_id
            - name: project_id
      name: file_tube_etl_mickey
      props:
        - name: object_id
        - name: md5sum
        - name: file_name
        - name: file_size
        - name: data_format
        - name: data_type
        - name: state
      root: None
      type: collector
fence:
  usersync:
    usersync: true
    userYamlS3Path: s3://cdis-gen3-users/vadcprod/user.yaml
  serviceAccount:
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::663707118480:role/vadcprod--vadcprod-helm--audit-sqs-sender
  replicaCount: 4
  autoscaling:
    enabled: false
    maxReplicas: 1
    minReplicas: 1
    targetCPUUtilizationPercentage: 40
  enabled: true
  externalSecrets:
    createK8sGoogleAppSecrets: true
    fenceConfig: vadcprod-fence-config
    fenceJwtKeys: vadcprod-fence-jwt
  image:
    repository: 707767160287.dkr.ecr.us-east-1.amazonaws.com/gen3/fence
    tag: "2025.10"

portal:
  enabled: false

frontend-framework:
  enabled: true
  image:
    repository: quay.io/cdis/vpodc-data-commons
    tag: 0.04

global:
  pdb: true
  aws:
    account: "663707118480"
    awsEsProxyRole: vadcprod--vadcprod-helm--es-access
    enabled: true
    hatchery_role: vadcprod--vadcprod-helm--hatchery-sa
    secretStoreServiceAccount:
      enabled: true
      roleArn: arn:aws:iam::663707118480:role/vadcprod--vadcprod-helm--external-secrets-sa
    wafv2:
      # -- (bool) Set to true if using AWS WAFv2
      enabled: true
      # -- (string) ARN for the WAFv2 ACL.
      wafAclArn: "arn:aws:wafv2:us-east-1:663707118480:regional/webacl/vadcprod-waf/144cec8b-dab0-4bec-809f-79b787add403"
  dev: false
  dictionaryUrl: https://s3.amazonaws.com/dictionary-artifacts/vadictionary/0.5.4/schema.json
  dispatcherJobNum: "10"
  environment: vadcprod
  # change to gen3ff / portal when we want to switch between portal or fefw
  frontendRoot: "gen3ff"
  externalSecrets:
    deploy: true
    createSlackWebhookSecret: true
    slackWebhookSecretName: "vadcprod-slack-webhook"
  hostname: vpodc.data-commons.org
  fenceURL: https://vpodc.data-commons.org/user
  manifestGlobalExtraValues:
    kube_bucket: kube-vadcprod-gen3
    logs_bucket: logs-vadcprod-gen3
  maintenanceMode: "off"
  # netPolicy:
  #   enabled: true
  #   dbSubnet:
  #     - 172.25.51.0/24
  #     - 172.25.50.0/24
  portalApp: gitops
  postgres:
    dbCreate: false
  revproxyArn: arn:aws:acm:us-east-1:663707118480:certificate/69ecb9e8-bcc8-4e91-9248-5eb3fcab5940
guppy:
  authFilterField: auth_resource_path
  replicaCount: 4
  autoscaling:
    enabled: false
    maxReplicas: 1
    minReplicas: 1
    targetCPUUtilizationPercentage: 40
  configIndex: etl_mickey_array-config
  enabled: true
  esEndpoint: http://elasticsearch:9200
  image:
    repository: 707767160287.dkr.ecr.us-east-1.amazonaws.com/gen3/guppy
    tag: "2025.10"
  indices:
    - index: etl_mickey
      type: patients
    - index: file_etl_mickey
      type: file
hatchery:
  enabled: true
  image:
    repository: 707767160287.dkr.ecr.us-east-1.amazonaws.com/gen3/hatchery
    tag: "2025.10"
  hatchery:
    json: |-
      {
          "user-namespace": "jupyter-pods",
          "sub-dir": "/lw-workspace",
          "user-volume-size": "10Gi",
          "sidecar": {
              "cpu-limit": "1.0",
              "memory-limit": "256Mi",
              "image": "707767160287.dkr.ecr.us-east-1.amazonaws.com/gen3/gen3fuse-sidecar:master",
              "env": {
                  "NAMESPACE": "default",
                  "HOSTNAME": "vpodc.data-commons.org"
              },
              "args": [],
              "command": [
                  "/bin/bash",
                  "/sidecarDockerrun.sh"
              ],
              "lifecycle-pre-stop": [
                  "su",
                  "-c",
                  "echo test",
                  "-s",
                  "/bin/sh",
                  "root"
              ]
          },
          "containers": [
              {
                  "target-port": 8888,
                  "cpu-limit": "0.5",
                  "memory-limit": "256Mi",
                  "name": "Bioinfo - Python/R",
                  "image": "quay.io/occ_data/jupyternotebook:1.7.4",
                  "env": {},
                  "args": [
                      "--NotebookApp.base_url=/lw-workspace/proxy/",
                      "--NotebookApp.password=''",
                      "--NotebookApp.token=''"
                  ],
                  "command": [
                      "start-notebook.sh"
                  ],
                  "path-rewrite": "/lw-workspace/proxy/",
                  "use-tls": "false",
                  "ready-probe": "/lw-workspace/proxy/",
                  "lifecycle-post-start": [
                      "/bin/sh",
                      "-c",
                      "export IAM=`whoami`; rm -rf /home/$IAM/pd/dockerHome; ln -s $(pwd) /home/$IAM/pd/dockerHome; mkdir -p /home/$IAM/.jupyter/custom; echo \"define(['base/js/namespace'], function(Jupyter){Jupyter._target = '_self';})\" >/home/$IAM/.jupyter/custom/custom.js; ln -s /data /home/$IAM/pd/; true"
                  ],
                  "user-uid": 1000,
                  "fs-gid": 100,
                  "user-volume-location": "/home/jovyan/pd"
              },
              {
                  "target-port": 8888,
                  "cpu-limit": "1.0",
                  "memory-limit": "1024Mi",
                  "name": "Bioinfo - Python/R",
                  "image": "quay.io/occ_data/jupyternotebook:1.7.4",
                  "env": {},
                  "args": [
                      "--NotebookApp.base_url=/lw-workspace/proxy/",
                      "--NotebookApp.password=''",
                      "--NotebookApp.token=''"
                  ],
                  "command": [
                      "start-notebook.sh"
                  ],
                  "path-rewrite": "/lw-workspace/proxy/",
                  "use-tls": "false",
                  "ready-probe": "/lw-workspace/proxy/",
                  "lifecycle-post-start": [
                      "/bin/sh",
                      "-c",
                      "export IAM=`whoami`; rm -rf /home/$IAM/pd/dockerHome; ln -s $(pwd) /home/$IAM/pd/dockerHome; mkdir -p /home/$IAM/.jupyter/custom; echo \"define(['base/js/namespace'], function(Jupyter){Jupyter._target = '_self';})\" >/home/$IAM/.jupyter/custom/custom.js; ln -s /data /home/$IAM/pd/; true"
                  ],
                  "user-uid": 1000,
                  "fs-gid": 100,
                  "user-volume-location": "/home/jovyan/pd"
              },
              {
                  "target-port": 8888,
                  "cpu-limit": "6.0",
                  "memory-limit": "15512Mi",
                  "name": "Bioinfo - Python/R",
                  "image": "quay.io/occ_data/jupyternotebook:1.7.4",
                  "env": {},
                  "args": [
                      "--NotebookApp.base_url=/lw-workspace/proxy/",
                      "--NotebookApp.password=''",
                      "--NotebookApp.token=''"
                  ],
                  "command": [
                      "start-notebook.sh"
                  ],
                  "path-rewrite": "/lw-workspace/proxy/",
                  "use-tls": "false",
                  "ready-probe": "/lw-workspace/proxy/",
                  "lifecycle-post-start": [
                      "/bin/sh",
                      "-c",
                      "export IAM=`whoami`; rm -rf /home/$IAM/pd/dockerHome; ln -s $(pwd) /home/$IAM/pd/dockerHome; mkdir -p /home/$IAM/.jupyter/custom; echo \"define(['base/js/namespace'], function(Jupyter){Jupyter._target = '_self';})\" >/home/$IAM/.jupyter/custom/custom.js; ln -s /data /home/$IAM/pd/; true"
                  ],
                  "user-uid": 1000,
                  "fs-gid": 100,
                  "user-volume-location": "/home/jovyan/pd"
              },
              {
                  "target-port": 8888,
                  "cpu-limit": "4.0",
                  "memory-limit": "8192Mi",
                  "name": "Bioinfo - Python/R (Lab Edition)",
                  "image": "quay.io/occ_data/jupyternotebook:1.7.4",
                  "env": {},
                  "args": [
                      "--NotebookApp.base_url=/lw-workspace/proxy/",
                      "--NotebookApp.default_url=/lab",
                      "--NotebookApp.password=''",
                      "--NotebookApp.token=''"
                  ],
                  "command": [
                      "start-notebook.sh"
                  ],
                  "path-rewrite": "/lw-workspace/proxy/",
                  "use-tls": "false",
                  "ready-probe": "/lw-workspace/proxy/",
                  "lifecycle-post-start": [
                      "/bin/sh",
                      "-c",
                      "export IAM=`whoami`; rm -rf /home/$IAM/pd/dockerHome; ln -s $(pwd) /home/$IAM/pd/dockerHome; mkdir -p /home/$IAM/.jupyter/custom; echo \"define(['base/js/namespace'], function(Jupyter){Jupyter._target = '_self';})\" >/home/$IAM/.jupyter/custom/custom.js; ln -s /data /home/$IAM/pd/; true"
                  ],
                  "user-uid": 1000,
                  "fs-gid": 100,
                  "user-volume-location": "/home/jovyan/pd"
              },
              {
                  "target-port": 8888,
                  "cpu-limit": "0.5",
                  "memory-limit": "256Mi",
                  "name": "Bioinfo - Python/R-3.6",
                  "image": "quay.io/occ_data/jupyternotebook:1.8.0",
                  "env": {},
                  "args": [
                      "--NotebookApp.base_url=/lw-workspace/proxy/",
                      "--NotebookApp.password=''",
                      "--NotebookApp.token=''"
                  ],
                  "command": [
                      "start-notebook.sh"
                  ],
                  "path-rewrite": "/lw-workspace/proxy/",
                  "use-tls": "false",
                  "ready-probe": "/lw-workspace/proxy/",
                  "lifecycle-post-start": [
                      "/bin/sh",
                      "-c",
                      "export IAM=`whoami`; rm -rf /home/$IAM/pd/dockerHome; ln -s $(pwd) /home/$IAM/pd/dockerHome; mkdir -p /home/$IAM/.jupyter/custom; echo \"define(['base/js/namespace'], function(Jupyter){Jupyter._target = '_self';})\" >/home/$IAM/.jupyter/custom/custom.js; ln -s /data /home/$IAM/pd/; true"
                  ],
                  "user-uid": 1000,
                  "fs-gid": 100,
                  "user-volume-location": "/home/jovyan/pd"
              },
              {
                  "target-port": 8888,
                  "cpu-limit": "1.0",
                  "memory-limit": "1024Mi",
                  "name": "Bioinfo - Python/R-3.6",
                  "image": "quay.io/occ_data/jupyternotebook:1.8.0",
                  "env": {},
                  "args": [
                      "--NotebookApp.base_url=/lw-workspace/proxy/",
                      "--NotebookApp.password=''",
                      "--NotebookApp.token=''"
                  ],
                  "command": [
                      "start-notebook.sh"
                  ],
                  "path-rewrite": "/lw-workspace/proxy/",
                  "use-tls": "false",
                  "ready-probe": "/lw-workspace/proxy/",
                  "lifecycle-post-start": [
                      "/bin/sh",
                      "-c",
                      "export IAM=`whoami`; rm -rf /home/$IAM/pd/dockerHome; ln -s $(pwd) /home/$IAM/pd/dockerHome; mkdir -p /home/$IAM/.jupyter/custom; echo \"define(['base/js/namespace'], function(Jupyter){Jupyter._target = '_self';})\" >/home/$IAM/.jupyter/custom/custom.js; ln -s /data /home/$IAM/pd/; true"
                  ],
                  "user-uid": 1000,
                  "fs-gid": 100,
                  "user-volume-location": "/home/jovyan/pd"
              },
              {
                  "target-port": 8888,
                  "cpu-limit": "6.0",
                  "memory-limit": "15512Mi",
                  "name": "Bioinfo - Python/R-3.6",
                  "image": "quay.io/occ_data/jupyternotebook:1.8.0",
                  "env": {},
                  "args": [
                      "--NotebookApp.base_url=/lw-workspace/proxy/",
                      "--NotebookApp.password=''",
                      "--NotebookApp.token=''"
                  ],
                  "command": [
                      "start-notebook.sh"
                  ],
                  "path-rewrite": "/lw-workspace/proxy/",
                  "use-tls": "false",
                  "ready-probe": "/lw-workspace/proxy/",
                  "lifecycle-post-start": [
                      "/bin/sh",
                      "-c",
                      "export IAM=`whoami`; rm -rf /home/$IAM/pd/dockerHome; ln -s $(pwd) /home/$IAM/pd/dockerHome; mkdir -p /home/$IAM/.jupyter/custom; echo \"define(['base/js/namespace'], function(Jupyter){Jupyter._target = '_self';})\" >/home/$IAM/.jupyter/custom/custom.js; ln -s /data /home/$IAM/pd/; true"
                  ],
                  "user-uid": 1000,
                  "fs-gid": 100,
                  "user-volume-location": "/home/jovyan/pd"
              },
              {
                  "target-port": 8888,
                  "cpu-limit": "4.0",
                  "memory-limit": "8192Mi",
                  "name": "Bioinfo - Python/R-3.6 (Lab Edition)",
                  "image": "quay.io/occ_data/jupyternotebook:1.8.0",
                  "env": {},
                  "args": [
                      "--NotebookApp.base_url=/lw-workspace/proxy/",
                      "--NotebookApp.default_url=/lab",
                      "--NotebookApp.password=''",
                      "--NotebookApp.token=''"
                  ],
                  "command": [
                      "start-notebook.sh"
                  ],
                  "path-rewrite": "/lw-workspace/proxy/",
                  "use-tls": "false",
                  "ready-probe": "/lw-workspace/proxy/",
                  "lifecycle-post-start": [
                      "/bin/sh",
                      "-c",
                      "export IAM=`whoami`; rm -rf /home/$IAM/pd/dockerHome; ln -s $(pwd) /home/$IAM/pd/dockerHome; mkdir -p /home/$IAM/.jupyter/custom; echo \"define(['base/js/namespace'], function(Jupyter){Jupyter._target = '_self';})\" >/home/$IAM/.jupyter/custom/custom.js; ln -s /data /home/$IAM/pd/; true"
                  ],
                  "user-uid": 1000,
                  "fs-gid": 100,
                  "user-volume-location": "/home/jovyan/pd"
              }
          ]
      }
indexd:
  defaultPrefix: dg.F738/
  replicaCount: 4
  autoscaling:
    enabled: false
    maxReplicas: 1
    minReplicas: 1
    targetCPUUtilizationPercentage: 40
  enabled: true
  externalSecrets:
    serviceCreds: vadcprod-indexd-service-creds
  image:
    repository: 707767160287.dkr.ecr.us-east-1.amazonaws.com/gen3/indexd
    tag: "2025.10"
manifestservice:
  enabled: true
  externalSecrets:
    manifestserviceG3auto: vadcprod-manifestservice-g3auto
  image:
    repository: 707767160287.dkr.ecr.us-east-1.amazonaws.com/gen3/manifestservice
    tag: "2025.10"
  serviceAccount:
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::663707118480:role/vadcprod--vadcprod-helm--manifest-service-sa
metadata:
  replicaCount: 4
  autoscaling:
    enabled: false
    maxReplicas: 1
    minReplicas: 1
    targetCPUUtilizationPercentage: 40
  enabled: true
  esEndpoint: http://elasticsearch:9200
  externalSecrets:
    metadataG3auto: vadcprod-metadata-g3auto
  image:
    repository: 707767160287.dkr.ecr.us-east-1.amazonaws.com/gen3/metadata-service
    tag: "2025.10"
ohdsi-atlas:
  enabled: true
  image:
    repository: 707767160287.dkr.ecr.us-east-1.amazonaws.com/gen3/ohdsi-atlas
    tag: VA-2025.10.24
ohdsi-webapi:
  enabled: true
  image:
    repository: 707767160287.dkr.ecr.us-east-1.amazonaws.com/gen3/ohdsi-webapi
    tag: VA-2025.10.24
peregrine:
  replicaCount: 4
  autoscaling:
    enabled: false
    maxReplicas: 1
    minReplicas: 1
    targetCPUUtilizationPercentage: 40
  enabled: true
  image:
    repository: 707767160287.dkr.ecr.us-east-1.amazonaws.com/gen3/peregrine
    tag: "2025.10"
revproxy:
  replicaCount: 4
  autoscaling:
    enabled: false
    maxReplicas: 1
    minReplicas: 1
    targetCPUUtilizationPercentage: 40
  enabled: true
  image:
    repository: 707767160287.dkr.ecr.us-east-1.amazonaws.com/gen3/nginx
    tag: "2025.10"
  ingress:
    aws:
      group: vadcprod
      sslPolicy: "ELBSecurityPolicy-TLS13-1-2-Res-FIPS-2023-04"
sheepdog:
  replicaCount: 4
  autoscaling:
    enabled: false
    maxReplicas: 1
    minReplicas: 1
    targetCPUUtilizationPercentage: 40
  enabled: true
  image:
    repository: 707767160287.dkr.ecr.us-east-1.amazonaws.com/gen3/sheepdog
    tag: "2025.10"
sower:
  enabled: true
  externalSecrets:
    pelicanserviceG3auto: vadcprod-pelicanservice-g3auto
    # sowerjobsG3auto: vadcprod-sower-jobs-g3auto
    createK8sSowerJobsSecret: false
  image:
    repository: 707767160287.dkr.ecr.us-east-1.amazonaws.com/gen3/sower
    tag: "2025.10"
  sowerConfig: []
ssjdispatcher:
  enabled: true
  externalSecrets:
    credsFile: vadcprod-ssjdispatcher-creds
  image:
    repository: 707767160287.dkr.ecr.us-east-1.amazonaws.com/gen3/ssjdispatcher
    tag: "2025.10"
  indexing: 707767160287.dkr.ecr.us-east-1.amazonaws.com/gen3/indexs3client:2025.10
wts:
  replicaCount: 4
  autoscaling:
    enabled: false
    maxReplicas: 1
    minReplicas: 1
    targetCPUUtilizationPercentage: 40
  enabled: true
  externalSecrets:
    createWtsOidcClientSecret: false
    wtsG3auto: vadcprod-wts-g3auto
    wtsOidcClient: vadcprod-wts-client-secret
  image:
    repository: 707767160287.dkr.ecr.us-east-1.amazonaws.com/gen3/workspace-token-service
    tag: "2025.10"
