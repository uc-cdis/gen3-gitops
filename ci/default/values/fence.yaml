fence:
  # -- (map) External Secrets settings.
  externalSecrets:
    createK8sJwtKeysSecret: false
    fenceJwtKeys: ci-fence-jwt
    fenceGoogleAppCredsSecret: ci-fence-google-app-creds-secret
    fenceGoogleStorageCredsSecret: ci-fence-google-storage-creds-secret
    createK8sGoogleAppSecrets: false
    fenceConfig: ci-fence-config-priv
    fenceSshKeys: ci-fence-ssh-keys
  fenceDeleteExpiredClients:
    schedule: "0 0 * * *"
  replicaCount: 2
  image:
    repository: quay.io/cdis/fence
    pullPolicy: IfNotPresent
    tag: "fix_registration"
  usersync:
    usersync: true
    userYamlS3Path: s3://cdis-gen3-users/ci/user.yaml
    # we do not want usersync to interrupt test flow
    # so it is set to run on the 31st of February
    schedule: "0 0 31 2 *"
    syncFromDbgap: true
  FENCE_CONFIG_PUBLIC:
    USER_YAML: |
      cloud_providers: {}
      groups: {}
      authz:
        anonymous_policies:
        - 'open_data_reader'
      
        all_users_policies:
        - 'requestor_creator'
        - 'kayako_creator'
      
        groups:
          - name: registered_users
            policies: []
            users:
              - 'main@example.org'
              - 'indexing@example.org'
      
          - name: gwas_teamproject1_users
            policies:
              - teamproject1_contributor
            users:
              - 'main@example.org'
      
          - name: gwas_teamproject2_users
            policies:
              - teamproject2_contributor
            users:
              - 'main@example.org'
      
          - name: 'data_uploaders'
            policies: ['data_upload']
            users:
              - 'user0@example.org'
              - 'user1@example.org'
      
          - name: 'access_request_updaters'
            policies:
              - 'requestor_reader'
              - 'requestor_updater'
              - 'requestor_deleter'
            users:
              - 'main@example.org'
      
        user_project_to_resource:
          QA: '/programs/QA'
          DEV: '/programs/DEV'
          test: '/programs/QA/projects/test'
          jenkins: '/programs/jnkns/projects/jenkins'
          jenkins2: '/programs/jnkns/projects/jenkins2'
          jnkns: '/programs/jnkns'
      
        policies:
          - id: 'kayako_creator'
            description: 'be able to create ticket via kayako wrapper service'
            resource_paths: ['/kayako']
            role_ids: ['kayako_creator']
          - id: "teamproject1_contributor"
            description: "be able to create and access cohorts of teamproject1 in Atlas, Argo-wrapper and cohort-middleware"
            resource_paths: ["/gwas_projects/project1"]
            role_ids: ["teamproject_member"]
          - id: "teamproject2_contributor"
            description: "be able to create and access cohorts of teamproject2 in Atlas, Argo-wrapper and cohort-middleware"
            resource_paths: ["/gwas_projects/project2"]
            role_ids: ["teamproject_member"]
          - id: 'workspace'
            description: 'be able to use workspace'
            resource_paths: ['/workspace']
            role_ids: ['workspace_user']
          - id: 'cedar_admin'
            description: 'be able to use cedar wrapper service'
            resource_paths: ['/cedar']
            role_ids: ['cedar_user']
          - id: 'requestor_creator'
            description: 'be able to create requestor request'
            role_ids: ['requestor_creator']
            resource_paths: ['/programs', '/requestor_client_credentials_test', '/study', '/mds_gateway', '/cedar']
          - id: 'requestor_reader'
            role_ids: ['requestor_reader']
            resource_paths: ['/programs', '/requestor_client_credentials_test', '/study', '/mds_gateway', '/cedar']
          - id: 'requestor_updater'
            role_ids: ['requestor_updater']
            resource_paths: ['/programs', '/requestor_client_credentials_test', '/study', '/mds_gateway', '/cedar']
          - id: 'requestor_deleter'
            role_ids: ['requestor_deleter']
            resource_paths: ['/programs', '/requestor_client_credentials_test', '/study', '/mds_gateway', '/cedar']
          - id: 'ttyadmin'
            description: 'be able to use admin tty'
            resource_paths: ['/ttyadmin']
            role_ids: ['ttyadmin_user']
          - id: 'data_upload'
            description: 'upload raw data files to S3'
            role_ids: ['file_uploader']
            resource_paths: ['/data_file']
          - id: 'sower'
            description: 'be able to use sower job'
            role_ids: ['sower_user']
            resource_paths: ['/sower']
          - id: 'mds_admin'
            description: 'be able to use metadata service'
            resource_paths: ['/mds_gateway']
            role_ids: ['mds_user']
          - id: 'audit_reader'
            role_ids:
            - 'audit_reader'
            resource_paths:
            - '/services/audit'
          - id: 'study_registrant_admin'
            resource_paths:
              - '/programs'
              - '/study'
            role_ids:
              - 'study_registrant'
          - id: 'audit_login_reader'
            role_ids:
            - 'audit_reader'
            resource_paths:
            - '/services/audit/login'
          - id: 'audit_presigned_url_reader'
            role_ids:
            - 'audit_reader'
            resource_paths:
            - '/services/audit/presigned_url'
          - id: 'all_dicom_studies_viewer'
            role_ids:
              - 'dicom-viewer_reader'
              - 'orthanc_reader'
              - 'ohif-viewer_reader'
            resource_paths:
            - '/services/dicom-viewer'
          - id: 'all_dicom_studies_admin'
            role_ids:
            - 'creator'
            resource_paths:
            - '/services/dicom-viewer'
          - id: 'all_orthanc_studies_viewer'
            role_ids:
              - 'dicom-viewer_reader'
              - 'orthanc_reader'
              - 'ohif-viewer_reader'
              - 'guppy_reader'
              - 'fence_reader'
              - 'peregrine_reader'
              - 'sheepdog_reader'
            resource_paths:
            - '/services/orthanc'
          - id: 'all_orthanc_studies_admin'
            role_ids:
            - 'creator'
            resource_paths:
            - '/services/orthanc'
          - id: 'all_programs_reader'
            role_ids:
              - 'guppy_reader'
              - 'fence_reader'
              - 'peregrine_reader'
              - 'sheepdog_reader'
            resource_paths:
              - '/programs'
      
          - id: 'programs.jnkns-admin'
            description: ''
            role_ids:
              - 'creator'
              - 'guppy_reader'
              - 'fence_reader'
              - 'peregrine_reader'
              - 'sheepdog_reader'
              - 'updater'
              - 'deleter'
            resource_paths:
              - '/programs/jnkns'
              - '/programs/jnkns/projects/jenkins'  # FIXME: temporary, b/c of bug in arranger
              - '/programs/jnkns/projects/jenkins2'  # FIXME: temporary, b/c of bug in arranger
              - '/gen3/programs/jnkns'
      
          - id: 'programs.QA-admin'
            description: ''
            role_ids:
              - 'creator'
              - 'guppy_reader'
              - 'fence_reader'
              - 'peregrine_reader'
              - 'sheepdog_reader'
              - 'updater'
              - 'deleter'
            resource_paths:
              - '/programs/QA'
              - '/programs/QA/projects/test'  # FIXME: temporary, b/c of bug in arranger
              - '/gen3/programs/QA'
      
          - id: 'programs.DEV-admin'
            description: ''
            role_ids:
              - 'creator'
              - 'guppy_reader'
              - 'fence_reader'
              - 'peregrine_reader'
              - 'sheepdog_reader'
              - 'updater'
              - 'deleter'
            resource_paths:
              - '/programs/DEV'
              - '/programs/DEV/projects/test'  # FIXME: temporary, b/c of bug in arranger
              - '/gen3/programs/DEV'
      
          - id: 'programs.test-admin'
            description: ''
            role_ids:
              - 'creator'
              - 'guppy_reader'
              - 'fence_reader'
              - 'peregrine_reader'
              - 'sheepdog_reader'
              - 'updater'
              - 'deleter'
            resource_paths:
              - '/programs/test'
              - '/programs/test/projects/test'  # FIXME: temporary, b/c of bug in arranger
              - '/gen3/programs/test'
      
          - id: 'abc-admin'
            description: ''
            role_ids:
              - 'creator'
              - 'guppy_reader'
              - 'fence_reader'
              - 'peregrine_reader'
              - 'sheepdog_reader'
              - 'updater'
              - 'deleter'
            resource_paths:
              - '/abc'
      
          - id: 'gen3-admin'
            description: ''
            role_ids:
              - 'creator'
              - 'guppy_reader'
              - 'fence_reader'
              - 'peregrine_reader'
              - 'sheepdog_reader'
              - 'updater'
              - 'deleter'
            resource_paths:
              - '/gen3'
      
          - id: 'gen3-hmb-researcher'
            description: ''
            role_ids:
              - 'creator'
              - 'guppy_reader'
              - 'fence_reader'
              - 'peregrine_reader'
              - 'sheepdog_reader'
              - 'updater'
              - 'deleter'
              - 'admin'
            resource_paths:
              - '/consents/HMB'
              - '/consents/GRU'
              - '/gen3'
      
          - id: 'abc.programs.test_program.projects.test_project1-viewer'
            description: ''
            role_ids:
              - 'guppy_reader'
              - 'fence_reader'
              - 'peregrine_reader'
              - 'sheepdog_reader'
            resource_paths:
              - '/abc/programs/test_program/projects/test_project1'
      
          - id: 'abc.programs.test_program.projects.test_project2-viewer'
            description: ''
            role_ids:
              - 'guppy_reader'
              - 'fence_reader'
              - 'peregrine_reader'
              - 'sheepdog_reader'
            resource_paths:
              - '/abc/programs/test_program/projects/test_project2'
      
          - id: 'abc.programs.test_program2.projects.test_project3-viewer'
            description: ''
            role_ids:
              - 'guppy_reader'
              - 'fence_reader'
              - 'peregrine_reader'
              - 'sheepdog_reader'
            resource_paths:
              - '/abc/programs/test_program2/projects/test_project3'
      
          - id: 'open_data_reader'
            description: ''
            role_ids:
              - 'guppy_reader'
              - 'fence_reader'
              - 'peregrine_reader'
              - 'sheepdog_reader'
            resource_paths:
              - '/open'
              - '/programs/DEV/projects/DICOM_test'
      
          - id: 'services.sheepdog-admin'
            description: 'CRUD access to programs and projects'
            role_ids:
              - 'sheepdog_admin'
            resource_paths:
              - '/services/sheepdog/submission/program'
              - '/services/sheepdog/submission/project'
      
          # indexd
          - id: 'indexd_admin'
            # this only works if indexd.arborist is enabled in manifest!
            description: 'full access to indexd API'
            role_ids:
              - 'indexd_admin'
            resource_paths:
              - '/programs'
              - '/services/indexd/admin'
          - id: 'indexd_creator'
            role_ids:
              - 'indexd_record_creator'
            resource_paths:
              - '/programs'
      
          - id: 'indexd-tester'
            description: ''
            role_ids:
              - 'indexd_record_creator'
              - 'indexd_record_reader'
              - 'indexd_record_updater'
              - 'indexd_delete_record'
              - 'indexd_storage_reader'
              - 'indexd_storage_writer'
            resource_paths: ['/gen3/programs/QA', '/programs/QA']

          - id: fence_admin
            role_ids:
            - fence_admin
            resource_paths:
            - /services/fence/admin
      
          - id: 'workflow_admin'
            description: 'admin access to argo workflow API'
            resource_paths: ['/services/workflow/argo/admin']
            role_ids: ['workflow_admin']
      
          - id: 'argo'
            description: 'be able to use argo'
            resource_paths: ['/argo']
            role_ids: ['argo_user']
      
          - id : 'requestor_client_credentials_test'
            description: 'test policy for client credentials requestor requests'
            role_ids:
            - 'requestor_creator'
            - 'requestor_updater'
            - 'requestor_deleter'
            resource_paths:
            - '/requestor_client_credentials_test'
      
        # Requestor Integration test policies
          - id: 'requestor_integration_test'
            description: 'test policy for integration tests'
            role_ids:
            - 'workspace_user'
            - 'requestor_creator'
            - 'requestor_updater'
            - 'requestor_deleter'
            resource_paths:
            - '/requestor_integration_test'
      
          - id: requestor_admin
            role_ids:
              - requestor_admin
            resource_paths:
              - "/programs"
              - "/services"
              - "/workspace"
              - "/gwas_projects"
      
          # Gen3 Workflow policies
          - id: workflow_user
            role_ids:
            - workflow_user
            resource_paths:
            - '/services/workflow/gen3-workflow'
            - '/services/workflow/gen3-workflow/tasks'
          - id: workflow_storage_deleter
            role_ids:
            - workflow_storage_deleter
            resource_paths:
            - '/services/workflow/gen3-workflow/user-bucket'
      
        resources:
          # General Access
          - name: 'data_file'
            description: 'data files, stored in S3'
          - name: 'requestor_client_credentials_test'
            description: 'test resource for client credentials requestor requests'
          - name: 'cedar'
            description: 'commons /cedar'
          - name: 'kayako'
            description: 'commons /kayako'
          - name: 'ttyadmin'
          - name: 'requestor_admin'
          - name: 'workspace'
          - name: "sower"
          - name: 'query_page'
          - name: 'mds_gateway'
            description: 'commons /mds-admin'
          - name: 'requestor_integration_test'
            description: 'policy used for requestor integration tests'
          - name: 'kayako'
            description: 'commons /kayako'
      
          # OLD Data
          - name: 'programs'
            subresources:
              - name: 'open'
              - name: 'QA'
                subresources:
                  - name: 'projects'
                    subresources:
                      - name: 'test'
              - name: 'DEV'
                subresources:
                  - name: 'projects'
                    subresources:
                      - name: 'test'
                      - name: 'DICOM_test'  # qa-midrc DICOM viewer testing
              - name: 'jnkns'
                subresources:
                  - name: 'projects'
                    subresources:
                      - name: 'jenkins'
                      - name: 'jenkins2'
              - name: 'test'
                subresources:
                  - name: 'projects'
                    subresources:
                      - name: 'test'
      
          # NEW Data WITH PREFIX
          - name: 'gen3'
            subresources:
              - name: 'programs'
                subresources:
                  - name: 'QA'
                    subresources:
                      - name: 'projects'
                        subresources:
                          - name: 'test'
                  - name: 'DEV'
                    subresources:
                      - name: 'projects'
                        subresources:
                          - name: 'test'
                  - name: 'jnkns'
                    subresources:
                      - name: 'projects'
                        subresources:
                          - name: 'jenkins'
                          - name: 'jenkins2'
                  - name: 'test'
                    subresources:
                      - name: 'projects'
                        subresources:
                          - name: 'test'
      
          - name: 'consents'
            subresources:
              - name: 'HMB'
                description: 'health/medical/biomedical research'
              - name: 'GRU'
                description: 'general research use'
      
          - name: 'abc'
            subresources:
              - name: 'programs'
                subresources:
                  - name: 'foo'
                    subresources:
                      - name: 'projects'
                        subresources:
                          - name: 'bar'
                  - name: 'test_program'
                    subresources:
                      - name: 'projects'
                        subresources:
                          - name: 'test_project1'
                          - name: 'test_project2'
                  - name: 'test_program2'
                    subresources:
                      - name: 'projects'
                        subresources:
                          - name: 'test_project3'
      
          - name: 'services'
            subresources:
              - name: 'sheepdog'
                subresources:
                  - name: 'submission'
                    subresources:
                      - name: 'program'
                      - name: 'project'
              - name: 'indexd'
                subresources:
                  - name: 'admin'
                  - name: 'bundles'
              - name: 'audit'
                subresources:
                  - name: 'presigned_url'
                  - name: 'login'
              - name: 'workflow'
                subresources:
                  - name: 'argo'
                    subresources:
                      - name: 'admin'
                  - name: 'gen3-workflow'
                    subresources:
                    - name: 'user-bucket'
                    - name: 'tasks'
              - name: 'dicom-viewer'
                subresources:
                  - name: 'studies'
              - name: 'orthanc'
                subresources:
                  - name: 'studies'
      
          - name: 'argo'
          - name: 'open'
          # study registration
          - name: 'study'
      
          - name: 'gwas_projects'
            subresources:
              - name: 'project1'
              - name: 'project2'
      
        roles:
          - id: 'kayako_creator'
            permissions:
              - id: 'kayako_access'
                action:
                  service: 'kayako'
                  method: 'create'
          # General Access
          - id: "teamproject_member"
            permissions:
              - id: "teamproject_member"
                action:
                  service: "atlas-argo-wrapper-and-cohort-middleware"
                  method: "access"
              - id: "teamproject_reader"
                action:
                  service: "*"
                  method: "read-storage"
          - id: 'requestor_admin'
            permissions:
              - id: 'requestor_admin_action'
                action:
                  service: 'requestor'
                  method: "*"
          - id: 'file_uploader'
            description: 'can upload data files'
            permissions:
              - id: 'file_upload'
                action:
                  service: '*'
                  method: 'file_upload'
          - id: 'workspace_user'
            permissions:
              - id: 'workspace_access'
                action:
                  service: 'jupyterhub'
                  method: 'access'
          - id: 'requestor_reader'
            permissions:
              - id: 'requestor_reader_action'
                action:
                  service: 'requestor'
                  method: 'read'
          - id: 'requestor_updater'
            permissions:
              - id: 'requestor_updater_action'
                action:
                  service: 'requestor'
                  method: 'update'
          - id: 'requestor_deleter'
            permissions:
              - id: 'requestor_deleter_action'
                action:
                  service: 'requestor'
                  method: 'delete'
          - id: 'requestor_creator'
            permissions:
              - id: 'requestor_creator_action'
                action:
                  service: 'requestor'
                  method: 'create'
          - id: 'ttyadmin_user'
            permissions:
              - id: 'ttyadmin_access'
                action:
                  service: 'ttyadmin'
                  method: 'access'
          - id: 'sower_user'
            permissions:
              - id: 'sower_access'
                action:
                  service: 'job'
                  method: 'access'
          - id: 'query_page_user'
            permissions:
              - id: 'query_page_access'
                action:
                  service: 'query_page'
                  method: 'access'
          - id: 'mds_user'
            permissions:
              - id: 'mds_access'
                action:
                  service: 'mds_gateway'
                  method: 'access'
          - id: 'cedar_user'
            permissions:
              - id: 'cedar_access'
                action:
                  service: 'cedar'
                  method: 'access'
          - id: 'study_registrant'
            permissions:
              - id: 'study_registration'
                action:
                  service: 'study_registration'
                  method: 'access'
              - id: 'storage_writer'
                action:
                  service: '*'
                  method: 'write-storage'
              - id: 'creator'
                action:
                  service: '*'
                  method: 'create'
          - id: 'workflow_admin'
            permissions:
              - id: 'argo_access'
                action:
                  service: 'argo_workflow'
                  method: 'access'
          - id: 'argo_user'
            permissions:
              - id: 'argo_access'
                action:
                  service: 'argo'
                  method: 'access'
          - id: 'audit_reader'
            permissions:
              - id: 'audit_reader_action'
                action:
                  service: 'audit'
                  method: 'read'
          - id: 'library_owner'
            description: ''
            permissions:
            - id: 'library_reader'
              action:
                method: read
                service: 'gen3-user-data-library'
            - id: 'library_creator'
              action:
                method: create
                service: 'gen3-user-data-library'
            - id: 'library_updater'
              action:
                method: update
                service: 'gen3-user-data-library'
            - id: 'library_deleter'
              action:
                method: delete
                service: 'gen3-user-data-library'
          # All services
          - id: 'admin'
            description: ''
            permissions:
              - id: 'admin'
                action:
                  service: '*'
                  method: '*'
          - id: 'creator'
            description: ''
            permissions:
              - id: 'creator'
                action:
                  service: '*'
                  method: 'create'
          - id: 'updater'
            description: ''
            permissions:
              - id: 'updater'
                action:
                  service: '*'
                  method: 'update'
          - id: 'deleter'
            description: ''
            permissions:
              - id: 'deleter'
                action:
                  service: '*'
                  method: 'delete'
          # guppy
          - id: 'guppy_reader'
            description: ''
            permissions:
            - id: 'guppy_reader'
              action:
                method: 'read'
                service: 'guppy'
          - id: 'fence_reader'
            description: ''
            permissions:
            - id: 'fence-reader'
              action:
                method: 'read'
                service: 'fence'
            - id: 'fence_storage_reader'
              action:
                method: 'read-storage'
                service: 'fence'
          - id: fence_admin
            permissions:
            - id: fence_admin
              action:
                method: '*'
                service: fence
          - id: 'peregrine_reader'
            description: ''
            permissions:
            - id: 'peregrine_reader'
              action:
                method: 'read'
                service: 'peregrine'
          - id: 'dicom-viewer_reader'
            description: ''
            permissions:
            - id: 'dicom-viewer_reader'
              action:
                method: 'read'
                service: 'dicom-viewer'
          - id: 'orthanc_reader'
            description: ''
            permissions:
            - id: 'orthanc_reader'
              action:
                method: 'read'
                service: 'orthanc'
          - id: 'ohif-viewer_reader'
            description: ''
            permissions:
            - id: 'ohif-viewer_reader'
              action:
                method: 'read'
                service: 'ohif-viewer'
      
          # Sheepdog
          - id: 'sheepdog_admin'
            description: 'sheepdog admin role for program project crud'
            permissions:
              - id: 'sheepdog_admin_action'
                action:
                  service: 'sheepdog'
                  method: '*'
          - id: 'sheepdog_reader'
            description: ''
            permissions:
            - id: 'sheepdog_reader'
              action:
                method: 'read'
                service: 'sheepdog'
      
          # indexd
          - id: 'indexd_admin'
            description: 'full access to indexd API'
            permissions:
              - id: 'indexd_admin'
                action:
                  service: 'indexd'
                  method: '*'
          - id: 'indexd_record_creator'
            description: ''
            permissions:
              - id: 'indexd_record_creator'
                action:
                  service: 'indexd'
                  method: 'create'
          - id: 'indexd_record_reader'
            description: ''
            permissions:
              - id: 'indexd_record_reader'
                action:
                  service: 'indexd'
                  method: 'read'
          - id: 'indexd_record_updater'
            description: ''
            permissions:
              - id: 'indexd_record_updater'
                action:
                  service: 'indexd'
                  method: 'update'
          - id: 'indexd_delete_record'
            description: ''
            permissions:
              - id: 'indexd_delete_record'
                action:
                  service: 'indexd'
                  method: 'delete'
          - id: 'indexd_storage_reader'
            description: ''
            permissions:
              - id: 'indexd_storage_reader'
                action:
                  service: 'indexd'
                  method: 'read-storage'
          - id: 'indexd_storage_writer'
            description: ''
            permissions:
              - id: 'indexd_storage_writer'
                action:
                  service: 'indexd'
                  method: 'write-storage'
      
          # arborist
          - id: 'arborist_creator'
            description: ''
            permissions:
              - id: 'arborist_creator'
                action:
                  service: 'arborist'
                  method: 'create'
          - id: 'arborist_reader'
            description: ''
            permissions:
              - id: 'arborist_reader'
                action:
                  service: 'arborist'
                  method: 'read'
          - id: 'arborist_updater'
            description: ''
            permissions:
              - id: 'arborist_updater'
                action:
                  service: 'arborist'
                  method: 'update'
          - id: 'arborist_deleter'
            description: ''
            permissions:
              - id: 'arborist_deleter'
                action:
                  service: 'arborist'
                  method: 'delete'
      
          # Gen3 Workflow
          - id: workflow_user
            permissions:
            - id: workflow_user
              action:
                service: gen3-workflow
                method: create
          - id: workflow_storage_deleter
            permissions:
            - id: workflow_storage_deleter
              action:
                service: gen3-workflow
                method: delete
      
      clients:
        wts:
          policies:
          - 'all_programs_reader'
          - 'open_data_reader'
          - 'workspace'
        basic-test-client:
          policies:
          - 'abc-admin'
          - 'gen3-admin'
        basic-test-abc-client:
          policies:
          - 'abc-admin'
        jenkins-client-tester:
          policies:
          - 'requestor_creator'
          - 'requestor_updater'
          - 'requestor_reader'
          - 'indexd_creator'
        jenkinsClientTester:
          policies:
          - 'requestor_creator'
          - 'requestor_updater'
          - 'indexd_creator'
        funnel-plugin-test:
          policies:
          - workflow_user
      
      users:
        main@example.org:
          admin: true
          policies:
          - fence_admin
          - 'data_upload'
          - 'workspace'
          - 'mds_admin'
          - 'sower'
          - 'services.sheepdog-admin'
          - 'programs.QA-admin'
          - 'programs.test-admin'
          - 'programs.DEV-admin'
          - 'programs.jnkns-admin'
          - 'abc-admin'
          - 'requestor_integration_test'
          - 'ttyadmin'
          - 'workflow_admin'
          - 'workflow_user'
          - 'workflow_storage_deleter'
          - 'argo'
          - 'all_orthanc_studies_viewer'
          - 'all_orthanc_studies_admin'
          - 'all_dicom_studies_admin'
          - 'all_dicom_studies_viewer'
          projects:
          - auth_id: 'QA'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
          - auth_id: 'test'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
          - auth_id: 'DEV'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
          - auth_id: 'jenkins'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
          - auth_id: 'jenkins2'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
          - auth_id: 'jnkns'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
        indexing@example.org:
          admin: true
          policies:
          - 'data_upload'
          - 'workspace'
          - 'sower'
          - 'services.sheepdog-admin'
          - 'programs.QA-admin'
          - 'programs.test-admin'
          - 'programs.DEV-admin'
          - 'programs.jnkns-admin'
          - 'abc-admin'
          - 'indexd_admin'
          - 'mds_admin'
          projects:
          - auth_id: 'QA'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage', 'write-storage']
          - auth_id: 'test'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
          - auth_id: 'DEV'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
          - auth_id: 'jenkins'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage', 'write-storage']
          - auth_id: 'jenkins2'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
          - auth_id: 'jnkns'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
        user0@example.org:
          admin: false
          policies:
          - 'workspace'
          - 'sower'
          - 'requestor_creator'
          - 'programs.QA-admin'
          - 'gen3-admin'
          - 'gen3-hmb-researcher'
          projects:
          - auth_id: 'QA'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
        user1@example.org:
          admin: false
          policies:
          - 'workspace'
          - 'sower'
          - 'programs.QA-admin'
          - 'programs.test-admin'
          - 'gen3-hmb-researcher'
          projects:
          - auth_id: 'QA'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
          - auth_id: 'test'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
        user2@example.org:
          admin: false
          policies:
          - 'requestor_creator'
          - 'cedar_admin'
          - 'sower'
          projects: []
        dummy-one@example.org:
          admin: false
          policies:
          - 'workspace'
          - 'audit_presigned_url_reader'
          - 'programs.QA-admin'
          - 'programs.test-admin'
          - 'programs.jnkns-admin'
          - 'abc.programs.test_program.projects.test_project1-viewer'
          projects:
          - auth_id: 'QA'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
          - auth_id: 'test'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
          - auth_id: 'jenkins'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
          - auth_id: 'jenkins2'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
          - auth_id: 'jnkns'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
        smarty-two@example.org:
          admin: false
          policies:
          - 'data_upload'
          - 'workspace'
          - 'audit_login_reader'
          - 'services.sheepdog-admin'
          - 'programs.QA-admin'
          - 'programs.test-admin'
          - 'programs.DEV-admin'
          - 'programs.jnkns-admin'
          - 'abc.programs.test_program2.projects.test_project3-viewer'
          projects:
          - auth_id: 'QA'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
          - auth_id: 'test'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
          - auth_id: 'jenkins'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
          - auth_id: 'jenkins2'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
          - auth_id: 'jnkns'
            privilege: ['create', 'read', 'update', 'delete', 'upload', 'read-storage']
    # Prefix to namespace Google Groups on a single Cloud Identity
    # This will be dynamically replaced by env_setup.sh script.
    GOOGLE_GROUP_PREFIX:

    # Prefix to namespace Google Service Accounts in a single Google Cloud Platform Project.
    # This will be dynamically replaced by env_setup.sh script.
    GOOGLE_SERVICE_ACCOUNT_PREFIX:

    # This will be dynamically replaced by env_setup.sh script.
    BASE_URL: https://HOSTNAME/user

    # -- (string) Name of the Fence app
    APP_NAME: "fence"

    # -- (map) Debug and security settings
    DEBUG: false

    # -- (bool) if true, will automatically login a user with username "test"
    MOCK_AUTH: false

    # -- (bool) if true, will fake a successful login response from Google in /login/google
    # NOTE: this will also modify the behavior of /link/google endpoints
    # will login as the username set in cookie DEV_LOGIN_COOKIE_NAME
    MOCK_GOOGLE_AUTH: true

    # -- (str) the name of the cookie set by mock authentication (used for testing only)
    DEV_LOGIN_COOKIE_NAME: "dev_login"

    # -- (bool) if true, will ignore anything configured in STORAGE_CREDENTIALS
    MOCK_STORAGE: false

    # -- (bool) allow OIDC traffic on http for development. By default it requires https.
    AUTHLIB_INSECURE_TRANSPORT: true

    # -- (bool) enable Prometheus Metrics for observability purposes
    ENABLE_PROMETHEUS_METRICS: false

    # -- (bool) set if you want browsers to only send cookies with requests over HTTPS
    SESSION_COOKIE_SECURE: true

    # -- (bool) enable CSRF protection
    ENABLE_CSRF_PROTECTION: true

    # -- (str) signing key for WTForms to sign CSRF tokens with
    WTF_CSRF_SECRET_KEY: "{{ENCRYPTION_KEY}}"

    # -- (bool) fence (at the moment) attempts a migration on startup. setting this to false will disable that
    ENABLE_DB_MIGRATION: true

    # -- (list) These are the *possible* scopes a client can be given, NOT scopes that are given to all clients. You can be more restrictive during client creation
    CLIENT_ALLOWED_SCOPES:
      - "openid"
      - "user"
      - "data"
      - "google_credentials"
      - "google_service_account"
      - "google_link"
      - "ga4gh_passport_v1"

    # -- (list) these are the scopes that CAN be included in a user's own access_token
    USER_ALLOWED_SCOPES:
      - "fence"
      - "openid"
      - "user"
      - "data"
      - "admin"
      - "google_credentials"
      - "google_service_account"
      - "google_link"
      - "ga4gh_passport_v1"

    # -- (list) these are the scopes that a browser session can create for a user (very similar to USER_ALLOWED_SCOPES, as the session will actually create access_tokens for an actively logged in user)
    SESSION_ALLOWED_SCOPES:
      - "openid"
      - "user"
      - "credentials"
      - "data"
      - "admin"
      - "google_credentials"
      - "google_service_account"
      - "google_link"
      - "ga4gh_passport_v1"

    # //////////////////////////////////////////////////////////////////////////////////////
    # LOGIN
    # //////////////////////////////////////////////////////////////////////////////////////

    # List of enabled login options (used by data-portal to display login buttons).
    LOGIN_OPTIONS:
      - name: 'Login from Google'
        idp: google
      - name: 'ORCID Login'
        idp: fence
        fence_idp: orcid
      - name: 'Login from RAS'
        idp: ras

    # -- (string) Default login provider. - must be configured in LOGIN_OPTIONS and OPENID_CONNECT - - if several options in LOGIN_OPTIONS are defined for this IDP, will default to the first one
    DEFAULT_LOGIN_IDP: google

    # `LOGIN_REDIRECT_WHITELIST` is a list of extra whitelisted URLs which can be redirected
    # to by the `/login/*` endpoints.
    LOGIN_REDIRECT_WHITELIST: [".", "/login"]

    # //////////////////////////////////////////////////////////////////////////////////////
    # LIBRARY CONFIGURATION (authlib & flask)
    # //////////////////////////////////////////////////////////////////////////////////////
    # authlib-specific configs for OIDC flow and JWTs
    OAUTH2_JWT_ALG: "RS256"
    OAUTH2_JWT_ENABLED: true
    OAUTH2_JWT_ISS: "{{BASE_URL}}"
    OAUTH2_PROVIDER_ERROR_URI: "/api/oauth2/errors"

    # used for flask, "path mounted under by the application / web server"
    APPLICATION_ROOT: "/user"

    # //////////////////////////////////////////////////////////////////////////////////////
    # Tokens, Lifetimes, & Expirations
    # //////////////////////////////////////////////////////////////////////////////////////
    # The name of the browser cookie in which the access token will be stored.
    ACCESS_TOKEN_COOKIE_NAME: "access_token"

    # The name of the browser cookie in which the session token will be stored.
    # Note that the session token also stores information for the
    # ``flask.session`` in the ``context`` field of the token.
    SESSION_COOKIE_NAME: "fence"

    # The domain of the browser cookie in which the session token will be stored.
    # Leave unset (not empty string!) for normal single-site deployment.
    SESSION_COOKIE_DOMAIN:

    OAUTH2_TOKEN_EXPIRES_IN:
      "authorization_code": 1200
      "implicit": 1200

    # The number of seconds after an access token is issued until it expires.
    ACCESS_TOKEN_EXPIRES_IN: 1200

    # The number of seconds after a refresh token is issued until it expires.
    REFRESH_TOKEN_EXPIRES_IN: 2592000

    # The number of seconds after which a browser session is considered stale.
    SESSION_TIMEOUT: 1800

    # The maximum session lifetime in seconds.
    SESSION_LIFETIME: 28800

    # The number of seconds the user's Google service account key used for
    # url signing will last before being expired/rotated
    # 30 days: 2592000 seconds
    GOOGLE_SERVICE_ACCOUNT_KEY_FOR_URL_SIGNING_EXPIRES_IN: 2592000

    # The number of seconds after a User's Google Service account is added to bucket
    # access until it expires.
    # 7 days: 604800 seconds
    GOOGLE_USER_SERVICE_ACCOUNT_ACCESS_EXPIRES_IN: 604800

    # The number of seconds after a User's Google account is added to bucket
    # access until it expires.
    GOOGLE_ACCOUNT_ACCESS_EXPIRES_IN: 86400

    # The number of seconds after a pre-signed url is issued until it expires.
    MAX_PRESIGNED_URL_TTL: 3600

    # The number of seconds after an API KEY is issued until it expires.
    MAX_API_KEY_TTL: 2592000

    # The number of seconds after an access token is issued until it expires.
    MAX_ACCESS_TOKEN_TTL: 3600

    # TEMPORARY: The maximum number of projects allowed in token claims.
    # This config var should be removed after sheepdog and peregrine support
    # auth checks against Arborist, and no longer check the token.
    TOKEN_PROJECTS_CUTOFF: 10

    # If set to true, will generate an new access token each time when a browser session update happens
    RENEW_ACCESS_TOKEN_BEFORE_EXPIRATION: false

    # The maximum lifetime of a Gen3 passport in seconds
    GEN3_PASSPORT_EXPIRES_IN: 43200

    ########################################################################################
    #                               OPTIONAL CONFIGURATIONS                                #
    ########################################################################################

    # For displaying a privacy policy to users, we can either link to the URL specified by
    # PRIVACY_POLICY_URL, or default to the `static/privacy_policy.md` file in fence.
    PRIVACY_POLICY_URL: null

    # //////////////////////////////////////////////////////////////////////////////////////
    # RELIABILITY OPTS
    # //////////////////////////////////////////////////////////////////////////////////////
    # Configurations related to resiliency, fault-tolerance and availability
    # This is the number of requests per second that the Nginx proxy will accept before reaching fence
    # The value defined in fence-config-public.yaml takes precedence over this one
    # In the absence of this OVERRIDE prefixed config, the legacy NGINX_RATE_LIMIT from the k8s deployment yaml is applied
    OVERRIDE_NGINX_RATE_LIMIT: 18

    # //////////////////////////////////////////////////////////////////////////////////////
    # SUPPORT INFO
    # //////////////////////////////////////////////////////////////////////////////////////
    # If you want an email address to show up when an unhandled error occurs, provide one
    # here. Something like: support@example.com
    SUPPORT_EMAIL_FOR_ERRORS: null

    # //////////////////////////////////////////////////////////////////////////////////////
    # SHIBBOLETH
    #   - Support using `shibboleth` in LOGIN_OPTIONS
    #   - Contains defaults for using NIH's Login.
    # //////////////////////////////////////////////////////////////////////////////////////
    # assumes shibboleth is deployed under {{BASE_URL}}/shibboleth
    SHIBBOLETH_HEADER: "persistent_id"
    SSO_URL: "https://auth.nih.gov/affwebservices/public/saml2sso?SPID={{BASE_URL}}/shibboleth&RelayState="
    ITRUST_GLOBAL_LOGOUT: "https://auth.nih.gov/siteminderagent/smlogout.asp?mode=nih&AppReturnUrl="

    DBGAP_ACCESSION_WITH_CONSENT_REGEX: "(?P<phsid>phs[0-9]+)(.(?P<version>v[0-9]+)){0,1}(.(?P<participant_set>p[0-9]+)){0,1}.(?P<consent>c[0-9]+)"

    # //////////////////////////////////////////////////////////////////////////////////////
    # STORAGE BACKENDS AND CREDENTIALS
    #   - Optional: Used for `/admin` & `/credentials` endpoints for user management.
    #               Also used during User Syncing process to automate managing Storage
    #               access for users.
    # //////////////////////////////////////////////////////////////////////////////////////
    # When true, this modifies usersync (not fence service itself) such that when syncing user
    # access to a Google storage backend happens in "bulk" by doing a diff *per google group*
    # between what's in Google and what's expected.
    GOOGLE_BULK_UPDATES: true

    # Configuration for various storage systems for the backend
    STORAGE_CREDENTIALS:
      'google':
        backend: google
        # this should be the project id where the Google Groups for data access are managed
        google_project_id: dcf-integration

    # //////////////////////////////////////////////////////////////////////////////////////
    # AWS BUCKETS AND CREDENTIALS
    #   - Support `/data` endpoints
    # //////////////////////////////////////////////////////////////////////////////////////
    # the cred values should be keys in section `AWS_CREDENTIALS`.
    S3_BUCKETS:
      cdis-presigned-url-test:
        region: 'us-east-1'
        cred: 'cdistest'
      gen3-helm-data-upload-bucket:
        region: 'us-east-1'
        cred: 'cdistest'
    DATA_UPLOAD_BUCKET: 'gen3-helm-data-upload-bucket'

    # //////////////////////////////////////////////////////////////////////////////////////
    # PROXY
    #   - Optional: If the api is behind firewall that needs to set http proxy
    # //////////////////////////////////////////////////////////////////////////////////////
    # this is only used by the Google Oauth2Client at the moment if provided
    HTTP_PROXY:
      host: 'cloud-proxy.internal.io'
      port: 3128

    # //////////////////////////////////////////////////////////////////////////////////////
    # MICROSERVICE PATHS
    #   - Support `/data` endpoints & authz functionality
    # //////////////////////////////////////////////////////////////////////////////////////
    # url where indexd microservice is running (for signed urls primarily)
    INDEXD: http://indexd-service
    # this is the username which fence uses to make authenticated requests to indexd
    INDEXD_USERNAME: "fence"
    # this is the password which fence uses to make authenticated requests to indexd
    INDEXD_PASSWORD: ""

    # url where authz microservice is running
    ARBORIST: http://arborist-service

    # url where the audit-service is running
    # This will be dynamically replaced by env_setup.sh script.
    AUDIT_SERVICE: "http://audit-service"
    ENABLE_AUDIT_LOGS:
      presigned_url: true
      login: true
    # `PUSH_AUDIT_LOGS_CONFIG.type` is one of: [api, aws_sqs].
    # - if type == api: logs are created by hitting the log creation endpoint.
    # - if type == aws_sqs: logs are pushed to an SQS and `aws_sqs_config` fields
    # `sqs_url` and `region` are required. Field `aws_cred` is optional and it
    # should be a key in section `AWS_CREDENTIALS`.
    PUSH_AUDIT_LOGS_CONFIG:
      type: aws_sqs
      aws_sqs_config:
        # This will be dynamically replaced by env_setup.sh script.
        sqs_url: https://sqs.us-east-1.amazonaws.com/707767160287/audit-service-sqs
        region: us-east-1
        aws_cred: 'cdistest'

    # A Google Project identitifier representing the default project to bill to for
    # accessing Google Requester Pays buckets (for signed urls and/or temporary service account
    # credentials).
    BILLING_PROJECT_FOR_SIGNED_URLS:
    BILLING_PROJECT_FOR_SA_CREDS:

    # Setting this to `true` will make Fence automatically attempt to create a Custom Role
    # in the billing project and give the necessary Google Service Account that role
    # (which will allow it to bill to the project).
    ENABLE_AUTOMATIC_BILLING_PERMISSION_SIGNED_URLS: false
    ENABLE_AUTOMATIC_BILLING_PERMISSION_SA_CREDS: false

    # //////////////////////////////////////////////////////////////////////////////////////
    # DATA ACCESS: GOOGLE LINKING & SERVICE ACCOUNT REGISTRATION
    #   - Support `/google/service_accounts` endpoints
    # //////////////////////////////////////////////////////////////////////////////////////
    # whether or not to allow access to the /link/google endpoints
    ALLOW_GOOGLE_LINKING: true

    # A Google Project with controlled data access will be determined INVALID if
    # if it has a parent organization UNLESS that parent organization's ID is in this
    # whitelist.
    WHITE_LISTED_GOOGLE_PARENT_ORGS: []

    # Service account email domains that represent a service account that Google owns.
    # These are usually created when a sepcific GCP service is enabled.
    # This is used for Service Account Validation for Data Access.
    GOOGLE_MANAGED_SERVICE_ACCOUNT_DOMAINS:
      - "dataflow-service-producer-prod.iam.gserviceaccount.com"
      - "cloudbuild.gserviceaccount.com"
      - "cloud-ml.google.com.iam.gserviceaccount.com"
      - "container-engine-robot.iam.gserviceaccount.com"
      - "dataflow-service-producer-prod.iam.gserviceaccount.com"
      - "sourcerepo-service-accounts.iam.gserviceaccount.com"
      - "dataproc-accounts.iam.gserviceaccount.com"
      - "gae-api-prod.google.com.iam.gserviceaccount.com"
      - "genomics-api.google.com.iam.gserviceaccount.com"
      - "containerregistry.iam.gserviceaccount.com"
      - "container-analysis.iam.gserviceaccount.com"
      - "cloudservices.gserviceaccount.com"
      - "stackdriver-service.iam.gserviceaccount.com"
      - "appspot.gserviceaccount.com"
      - "partnercontent.gserviceaccount.com"
      - "trifacta-gcloud-prod.iam.gserviceaccount.com"
      - "gcf-admin-robot.iam.gserviceaccount.com"
      - "compute-system.iam.gserviceaccount.com"
      - "gcp-sa-websecurityscanner.iam.gserviceaccount.com"
      - "storage-transfer-service.iam.gserviceaccount.com"
      - "firebase-sa-management.iam.gserviceaccount.com"
      - "firebase-rules.iam.gserviceaccount.com"
      - "gcp-sa-cloudbuild.iam.gserviceaccount.com"
      - "gcp-sa-automl.iam.gserviceaccount.com"
      - "gcp-sa-datalabeling.iam.gserviceaccount.com"
      - "gcp-sa-cloudscheduler.iam.gserviceaccount.com"

    # The types of service accounts that are allowed to be registered at
    # /google/service_accounts endpoints
    ALLOWED_USER_SERVICE_ACCOUNT_DOMAINS:
      # compute engine default service account
      - "developer.gserviceaccount.com"
      # app engine default service account
      - "appspot.gserviceaccount.com"
      # user-managed service account
      - "iam.gserviceaccount.com"

    # Role caching for generating presigned urls if max role session increase is true
    # then we can increase the amount of time that a session is valid for
    MAX_ROLE_SESSION_INCREASE: false
    ASSUME_ROLE_CACHE_SECONDS: 1800

    # Optional user registration feature: Ask users to register (provide firstname/lastname/org/email) on login.
    # If user registers, add them to configured Arborist group; idea is that the Arborist group
    # will have access to download data.
    REGISTER_USERS_ON: true
    REGISTERED_USERS_GROUP: ""
    # RAS refresh_tokens expire in 15 days
    RAS_REFRESH_EXPIRATION: 1296000
    # List of JWT issuers from which Fence will accept GA4GH visas
    GA4GH_VISA_ISSUER_ALLOWLIST:
      - "{{BASE_URL}}"
      - "https://sts.nih.gov"
      - "https://stsstg.nih.gov"
    # Number of projects that can be registered to a Google Service Accont
    SERVICE_ACCOUNT_LIMIT: 6

    # Global sync visas during login
    # None(Default): Allow per client i.e. a fence client can pick whether or not to sync their visas during login with parse_visas param in /authorization endpoint
    # True: Parse for all clients i.e. a fence client will always sync their visas during login
    # False: Parse for no clients i.e. a fence client will not be able to sync visas during login even with parse_visas param
    GLOBAL_PARSE_VISAS_ON_LOGIN: false
    # Settings for usersync with visas
    USERSYNC:
      sync_from_visas: false
      # fallback to dbgap sftp when there are no valid visas for a user i.e. if they're expired or if they're malformed
      fallback_to_dbgap_sftp: false
      visa_types:
        ras: ["https://ras.nih.gov/visas/v1", "https://ras.nih.gov/visas/v1.1"]
    RAS_USERINFO_ENDPOINT: "/openid/connect/v1.1/userinfo"
