global:
  aws:
    enabled: true
    account: 419939494982
    hatchery_role: arn:aws:iam::419939494982:role/gen3-service/headneck-default-hatchery-sa
    secretStoreServiceAccount:
      enabled: true
      name: external-secrets
      roleArn: arn:aws:iam::419939494982:role/gen3-service/headneck-default-external-secrets-sa
    wafv2:
      wafAclArn: arn:aws:wafv2:us-east-1:419939494982:regional/webacl/headneck-waf/7bf68efb-772e-4ac6-857d-0c73911b9e77
  dev: false
  externalSecrets:
    deploy: true
  postgres:
    dbCreate: false
    externalSecret: "headneck_aurora-master-password"
  environment: "headneck"
  hostname: "headneckcancerbank.data-commons.org"
  revproxyArn: "arn:aws:acm:us-east-1:419939494982:certificate/04695470-5b09-41a9-bccb-f5da3dd0f5a4"
  dictionaryUrl: "https://s3.amazonaws.com/dictionary-artifacts/datadictionary/develop/schema.json"
  portalApp: gitops
  publicDataSets: false
  tierAccessLevel: "private"
  tierAccessLimit: 100
  netPolicy:
    enabled: false
  dispatcherJobNum: "10"
  frontendRoot: "gen3ff"
  ddEnabled: false

ambassador:
  # Lower cost
  resources:
    requests:
      memory: "105Mi"
      cpu: "15m"
  enabled: true

arborist:
  # Lower cost
  resources:
    requests:
      memory: "105Mi"
      cpu: "15m"
  enabled: true
  externalSecrets:
    dbcreds: "headneck_default-arborist-creds"

argo-wrapper:
  enabled: false

audit:
  # Lower cost
  resources:
    requests:
      memory: "105Mi"
      cpu: "15m"
  enabled: true
  serviceAccount:
    annotations:
      eks.amazonaws.com/role-arn: "arn:aws:iam::419939494982:role/gen3-service/headneck-default-audit-sa"
  externalSecrets:
    dbcreds: "headneck_default-audit-creds"
    createK8sAuditSecret: true


aws-es-proxy:
  # Lower cost
  resources:
    requests:
      memory: "105Mi"
      cpu: "15m"
  enabled: true
  esEndpoint: vpc-headneck-gen3-metadata-nqv355pim7ge3dduo5kexxoilu.us-east-1.es.amazonaws.com
  externalSecrets:
    awsCreds: "headneck_default-aws-es-proxy-creds"

dicom-server:
  enabled: false
  externalSecrets:
    dbcreds: "headneck_default-dicom-server-creds"

dicom-viewer:
  enabled: false
  externalSecrets:
    dbcreds: "headneck_default-dicom-viewer-creds"


fence:
  # Lower cost
  resources:
    requests:
      memory: "105Mi"
      cpu: "15m"
  enabled: true
  serviceAccount:
    annotations:
      eks.amazonaws.com/role-arn: "arn:aws:iam::419939494982:role/gen3-service/headneck-default-fence-sa"

  externalSecrets:
    fenceJwtKeys: ""
    fenceConfig: headneck_default-fence-config
    fenceGoogleAppCredsSecret: ""
    fenceGoogleStorageCredsSecret: ""
    createK8sJwtKeysSecret: true
    createK8sGoogleAppSecrets: true
    createK8sFenceConfigSecret: true
    dbcreds: "headneck_default-fence-creds"


  USER_YAML: |
    {}

  usersync:
    usersync: true
    schedule: "*/30 * * * *"
    syncFromDbgap: false
    userYamlS3Path: "s3://cdis-gen3-users/dev/user.yaml"
    slack_webhook: ""
    slack_send_dbgap: false

frontend-framework:
  # Lower cost
  resources:
    requests:
      memory: "105Mi"
      cpu: "15m"
  enabled: true
  image:
    repository: quay.io/cdis/commons-frontend-app
    tag: main

grafana:
  enabled: false

guppy:
  # Lower cost
  resources:
    requests:
      memory: "105Mi"
      cpu: "15m"
  enabled: false

hatchery:
  # Lower cost
  resources:
    requests:
      memory: "105Mi"
      cpu: "15m"
  enabled: true

  hatchery:
    sidecarContainer:
      cpu-limit: '0.1'
      memory-limit: 256Mi
      image: quay.io/cdis/ecs-ws-sidecar:master
      env:
        NAMESPACE: "{{ .Release.Namespace }}"
        HOSTNAME: "{{ .Values.global.hostname }}"
      args: []
      command:
      - "/bin/bash"
      - "./sidecar.sh"
      lifecycle-pre-stop:
      - su
      - "-c"
      - echo test
      - "-s"
      - "/bin/sh"
      - root
    containers:
      -
        target-port: 8888
        cpu-limit: '1.0'
        memory-limit: 2Gi
        name: "(Tutorials) Example Analysis Jupyter Lab Notebooks"
        image: quay.io/cdis/heal-notebooks:combined_tutorials__latest
        env:
          FRAME_ANCESTORS: https://{{ .Values.global.hostname }}
        args:
        - "--NotebookApp.base_url=/lw-workspace/proxy/"
        - "--NotebookApp.default_url=/lab"
        - "--NotebookApp.password=''"
        - "--NotebookApp.token=''"
        - "--NotebookApp.shutdown_no_activity_timeout=5400"
        - "--NotebookApp.quit_button=False"
        command:
        - start-notebook.sh
        path-rewrite: "/lw-workspace/proxy/"
        use-tls: 'false'
        ready-probe: "/lw-workspace/proxy/"
        lifecycle-post-start:
        - "/bin/sh"
        - "-c"
        - export IAM=`whoami`; rm -rf /home/$IAM/pd/dockerHome; rm -rf /home/$IAM/pd/lost+found;
          ln -s /data /home/$IAM/pd/; true
        user-uid: 1000
        fs-gid: 100
        user-volume-location: "/home/jovyan/pd"
        gen3-volume-location: "/home/jovyan/.gen3"


indexd:
  # Lower cost
  resources:
    requests:
      memory: "105Mi"
      cpu: "15m"
  enabled: true
  defaultPrefix: dg.XXXX/
  externalSecrets:
    dbcreds: "headneck_default-indexd-creds"
    createK8sServiceCredsSecret: true


manifestservice:
  # Lower cost
  resources:
    requests:
      memory: "105Mi"
      cpu: "15m"
  enabled: true
  externalSecrets:
    createK8sManifestServiceSecret: true

metadata:
 # Lower cost
  initResources:
    requests:
      memory: "105Mi"
      cpu: "15m"
  # Lower cost
  resources:
    requests:
      memory: "105Mi"
      cpu: "15m"
  enabled: true
  externalSecrets:
    dbcreds: "headneck_default-metadata-creds"
    createK8sMetadataSecret: true

peregrine:
  # Lower cost
  resources:
    requests:
      memory: "105Mi"
      cpu: "15m"
  enabled: true
  externalSecrets:
    dbcreds: "headneck_default-sheepdg-creds"

pidgin:
  enabled: false

portal:
  enabled: false

requestor:
  enabled: false
  externalSecrets:
    dbcreds: "headneck_default-requestor-creds"

revproxy:
  enabled: true

s3-mountpoint:
  enabled: false

sheepdog:
  # Lower cost
  resources:
    requests:
      memory: "105Mi"
      cpu: "15m"
  enabled: true
  externalSecrets:
    dbcreds: "headneck_default-sheepdog-creds"

ssjdispatcher:
  enabled: false

sower:
  enabled: false

wts:
  # Lower cost
  resources:
    requests:
      memory: "105Mi"
      cpu: "15m"
  enabled: true
  externalSecrets:
    dbcreds: "headneck_default-wts-creds"
